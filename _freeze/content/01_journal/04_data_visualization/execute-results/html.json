{
  "hash": "47d82bb97b54493d391231caa2705871",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Visualization\"\nauthor: \"Ararat Çetinkaya\"\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(ggplot2)\n##Data Acquisition ----\n\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> Rows: 399319 Columns: 67\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\n##Data Wrangling ----\n\n\n\ncovid_data_general <- covid_data_tbl %>% \n  \n  mutate(location = case_when(\n    \n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n    \n  )) %>%\n  distinct() %>% \n  select(continent, location, date, total_cases) \n\ncovid_country <- covid_data_general %>% \n  \n  filter(location == c(\"Germany\" , \"UK\", \"France\" , \"Spain\", \"USA\", \"Turkey\") ) %>% \n  select(location, date, total_cases) \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> Warning: There was 1 warning in `filter()`.\n#> ℹ In argument: `location == c(\"Germany\", \"UK\", \"France\", \"Spain\", \"USA\",\n#>   \"Turkey\")`.\n#> Caused by warning in `location == c(\"Germany\", \"UK\", \"France\", \"Spain\", \"USA\", \"Turkey\")`:\n#> ! uzun olan nesne uzunluğu kısa olan nesne uzunluğunun bir katı değil\n```\n\n\n:::\n\n```{.r .cell-code}\ncovid_country %>%\n  \n  ggplot(aes(x = date, y= total_cases, fill = location, color = location)) +\n  \n  geom_line(size = 1, linetype = 1) +\n  \n  theme_minimal() +\n  \n  theme(\n    axis.text.x = element_text(\n      angle = 60,\n      hjust = 1 \n    ),\n    panel.background = element_rect(fill = \"transparent\"), \n    plot.background = element_rect(fill = \"transparent\", color = NA), \n    legend.background = element_rect(fill = \"transparent\"), \n    legend.box.background = element_rect(fill = \"transparent\"), \n    legend.key = element_rect(fill = \"transparent\", colour = NA), \n    axis.line = element_line(colour = \"black\")\n  ) +\n  \n   geom_label(aes(x =date, y = total_cases, label=total_cases),\n             fill  = \"blue\",\n             color = \"white\",\n             fontface = \"italic\",\n             vjust = 0,\n             hjust = 0.6,\n             size  = 2.5,\n             data = covid_country %>%\n               filter(location %in% c(\"USA\")) %>% \n               filter(total_cases == max(total_cases))\n            )+\n  \n  scale_x_date(labels = date_format(\"%B/%y\"),breaks = date_breaks(\"months\"))+\n  scale_y_continuous(breaks = seq(0, 9e+07, by = 20000000), \n                     labels = scales::label_number(scale_cut = scales::cut_short_scale())) +\n  \n  \n  labs(\n    title = \"COVID-19 Confirmed Cases Worldwide\",\n    subtitle = \"Cases for Selected Countries\",\n    y = \"Cumulative Cases\",\n    x= \"Between 2020-2022\",\n    color = \"Countries\",\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#> ℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> Warning: Removed 25 rows containing missing values or values outside the scale range\n#> (`geom_line()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n## Challenge 2 ----\n\nworld <- map_data(\"world\")\n\n\ncovid_death_data <- covid_data_tbl %>% \n  \n  mutate(location = case_when(\n    \n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n    \n  )) %>%\n  \n  select(location, date, total_deaths,population) %>%\n  filter(date == \"2022-04-26\") %>% \n  select(-date)\n\n\ncovid_death_data <- covid_death_data %>% \n  \n  \n  left_join(y=world, by = c(\"location\" = \"region\")) %>% \n  mutate(mortality_rate = total_deaths*100/population) %>% \n  select(-total_deaths,-population) \n\n\n##Data Visualization\n\ncovid_death_data %>% ggplot(aes(long, lat)) +\n  \n  \n  geom_map(aes(map_id = location, fill = `mortality_rate`),  map=world, color = \"black\") +\n  \n  \n  scale_fill_gradient(\n    low = \"yellowgreen\",\n    high = \"red\",\n    labels = scales::percent,\n    na.value = \"grey\"\n  )+\n  \n  \n  labs(\n    title = \"Confirmed COVID-19 deaths relative to the size of the population\",\n    subtitle = \"Around 6.2 million Confirmed COVID-19 deaths worldwide\",\n    caption = str_glue(\"Date: 26/04/2022\"),\n    color = \"mortality_rate\"\n  )+\n  \n  \n  theme(\n    panel.background = element_rect(fill = \"transparent\"),\n    plot.background = element_rect(fill = \"transparent\", color = NA), \n    legend.background = element_rect(fill = \"transparent\"), \n    legend.box.background = element_rect(fill = \"transparent\"), \n    legend.key = element_rect(fill = \"transparent\", colour = NA), # get rid of key legend fill, and of the surrounding\n  ) \n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}