[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Lab Journal",
    "section": "",
    "text": "This is a template example for lab journaling. Students in the data science courses at the Institute of Entrepreneurship will use this template to learn R for business analytics. Students can replace this text as they wish."
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "My Lab Journal",
    "section": "How to use",
    "text": "How to use\n\nAccept the assignment and get your own github repo.\nBlog/journal what you are doing in R, by editing the .qmd files.\nSee the links page for lots of helpful links on learning R.\nChange everything to make it your own.\nMake sure to render you website everytime before you want to upload changes"
  },
  {
    "objectID": "content/02_notes/05_class_notes.html",
    "href": "content/02_notes/05_class_notes.html",
    "title": "Class Notes",
    "section": "",
    "text": "IMPORTANT: You can delete everything in here and start fresh. You might want to start by not deleting anything above this line until you know what that stuff is doing.\nThis is an .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header."
  },
  {
    "objectID": "content/01_journal/03_data_wrangling.html",
    "href": "content/01_journal/03_data_wrangling.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/01_tidyverse.html",
    "href": "content/01_journal/01_tidyverse.html",
    "title": "Tidyverse",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh.\nThis is a .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "content/01_journal/01_tidyverse.html#header-2",
    "href": "content/01_journal/01_tidyverse.html#header-2",
    "title": "Tidyverse",
    "section": "2.1 Header 2",
    "text": "2.1 Header 2\n\nHeader 3\n\nHeader 4\n\nHeader 5\n\nHeader 6"
  },
  {
    "objectID": "03_data_wrangling.html",
    "href": "03_data_wrangling.html",
    "title": "03 Data Wrangling",
    "section": "",
    "text": "# Tidyverse\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(vroom)\n\n\nAttaching package: 'vroom'\n\nThe following objects are masked from 'package:readr':\n\n    as.col_spec, col_character, col_date, col_datetime, col_double,\n    col_factor, col_guess, col_integer, col_logical, col_number,\n    col_skip, col_time, cols, cols_condense, cols_only, date_names,\n    date_names_lang, date_names_langs, default_locale, fwf_cols,\n    fwf_empty, fwf_positions, fwf_widths, locale, output_column,\n    problems, spec\n\n# Data Table\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:lubridate':\n\n    hour, isoweek, mday, minute, month, quarter, second, wday, week,\n    yday, year\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\n# Counter\nlibrary(tictoc)\n\n\nAttaching package: 'tictoc'\n\nThe following object is masked from 'package:data.table':\n\n    shift\n\n# DATA IMPORT ----\n\n#patent_tbl\n\ncol_types_patent &lt;- list(\n  id = col_character(),\n  date = col_date(\"%Y-%m-%d\"),\n  num_claims = col_double()\n)\n\npatent_tbl &lt;- vroom(\n  file       = \"C:/Users/arara/OneDrive/Belgeler/GitHub/ss24-bdsb-araratcetinkaya/03_data_wrangling_files/Patent_data_reduced/patent.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types_patent,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n\n\n#patent_assignee_tbl\n\ncol_types_patent_assignee &lt;- list(\n  patent_id = col_character(),\n  assignee_id = col_character()\n)\n\npatent_assignee_tbl &lt;- vroom(\n  file       = \"C:/Users/arara/OneDrive/Belgeler/GitHub/ss24-bdsb-araratcetinkaya/03_data_wrangling_files/Patent_data_reduced/patent_assignee.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types_patent_assignee,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n\n\n#assignee_tbl\n\ncol_types_assignee_tbl &lt;- list(\n  id = col_character(),\n  type = col_integer(),\n  organization = col_character()\n)\n\nassignee_tbl &lt;- vroom(\n  file       = \"C:/Users/arara/OneDrive/Belgeler/GitHub/ss24-bdsb-araratcetinkaya/03_data_wrangling_files/Patent_data_reduced/assignee.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types_assignee_tbl,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n\n#uspc_tbl\n\ncol_types_uspc_tbl &lt;- list(\n  patent_id = col_character(),\n  mainclass_id = col_character(),\n  sequence = col_integer()\n)\n\nuspc_tbl &lt;- vroom(\n  file       = \"C:/Users/arara/OneDrive/Belgeler/GitHub/ss24-bdsb-araratcetinkaya/03_data_wrangling_files/Patent_data_reduced/uspc.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types_uspc_tbl,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n\n\n\n#setting data.table\n\nsetDT(patent_tbl)\nsetDT(patent_assignee_tbl)\nsetDT(assignee_tbl)\nsetDT(uspc_tbl)\n\n# DATA WRANGLING ----\n\n# combining data tables\n\n#Table for question 1 - patent dominance\n\npatent_dominance_q1 &lt;- assignee_tbl %&gt;% left_join( y=patent_assignee_tbl, by = c(\"id\" = \"assignee_id\"))\n\n#Table for question 2 - Recent patent activity\n\nrecent_patent_q2 &lt;- patent_dominance_q1 %&gt;% left_join( y=patent_tbl, by = c(\"patent_id\" = \"id\"))\n\n#Table for question 3 - Innovation in tech\n\ninnovation_tech_q3 &lt;- patent_dominance_q1 %&gt;% left_join( y=uspc_tbl, by = \"patent_id\")\n\nWarning in left_join(., y = uspc_tbl, by = \"patent_id\"): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 376875 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n# DATA ANALYSIS ----\n\n#Question 1 patent dominance\n\n## Patent types for USA based organizations and individuals are taken from excel\n\npatent_dominance_USA_tbl &lt;- patent_dominance_q1 %&gt;%\n  select(organization,type) %&gt;%\n  filter(type == c('2','4','6','8','9'))\n\norganizationNumberUSA &lt;- table(patent_dominance_USA_tbl$organization) %&gt;%\n  as.data.frame() %&gt;%\n  rename('Organization' = 'Var1') %&gt;%\n  arrange(desc(Freq)) %&gt;%\n  slice(1:10)%&gt;%\n  as_tibble()\n\norganizationNumberUSA\n\n# A tibble: 10 × 2\n   Organization                                 Freq\n   &lt;fct&gt;                                       &lt;int&gt;\n 1 International Business Machines Corporation  1509\n 2 Microsoft Corporation                         633\n 3 Google Inc.                                   534\n 4 QUALCOMM Incorporated                         519\n 5 Apple Inc.                                    440\n 6 General Electric Company                      375\n 7 Hewlett-Packard Development Company, L.P.     327\n 8 AT&T INTELLECTUAL PROPERTY I, L.P.            325\n 9 Intel Corporation                             324\n10 GM Global Technology Operations LLC           307\n\n###IBM has the most patents in USA\n\n\n#Question 2 Recent patent activity\n\npatent_august2014_tbl &lt;- recent_patent_q2 %&gt;%\n  select(organization, date, num_claims)  %&gt;%\n  mutate(month = month(date)) %&gt;%\n  filter(month==8) %&gt;%\n  select(-num_claims, -date) %&gt;%\n  count(organization) %&gt;% \n  rename(\"PatentNumber\" = \"n\" ) %&gt;% \n  arrange(desc(PatentNumber)) %&gt;%\n  slice(1:10)%&gt;%\n  as_tibble()\n\npatent_august2014_tbl\n\n# A tibble: 10 × 2\n   organization                                PatentNumber\n   &lt;chr&gt;                                              &lt;int&gt;\n 1 International Business Machines Corporation          718\n 2 Samsung Electronics Co., Ltd.                        524\n 3 Canon Kabushiki Kaisha                               361\n 4 Microsoft Corporation                                337\n 5 Sony Corporation                                     269\n 6 Google Inc.                                          240\n 7 QUALCOMM Incorporated                                223\n 8 Apple Inc.                                           222\n 9 Kabushiki Kaisha Toshiba                             213\n10 LG Electronics Inc.                                  211\n\n#IBM has the most patents in August 2014\n\n#Question 3 Innovation in Tech\n\n\nuspto_mainclass_tbl &lt;- innovation_tech_q3 %&gt;%\n  select(organization,mainclass_id)\n\norganizationNumberWW &lt;- table(uspto_mainclass_tbl$organization) %&gt;%\n  as.data.frame() %&gt;%\n  rename('organization' = 'Var1') %&gt;%\n  arrange(desc(Freq)) %&gt;%\n  slice(1:10)%&gt;%\n  as_tibble()\n\norganizationNumberWW #Top10 worldwide companies with the most patent\n\n# A tibble: 10 × 2\n   organization                                 Freq\n   &lt;fct&gt;                                       &lt;int&gt;\n 1 International Business Machines Corporation 20680\n 2 Samsung Electronics Co., Ltd.               16089\n 3 Canon Kabushiki Kaisha                      10301\n 4 Sony Corporation                             9073\n 5 Microsoft Corporation                        8126\n 6 QUALCOMM Incorporated                        7837\n 7 Kabushiki Kaisha Toshiba                     7457\n 8 Google Inc.                                  6827\n 9 LG Electronics Inc.                          6386\n10 Panasonic Corporation                        6124\n\norganizationNumberWW &lt;- organizationNumberWW %&gt;% left_join( y=uspto_mainclass_tbl, by = \"organization\")\n\n\nmainclassNumber &lt;- table(organizationNumberWW$mainclass_id) %&gt;%\n  as.data.frame() %&gt;%\n  rename('USPTO Main Class ID' = 'Var1') %&gt;%\n  arrange(desc(Freq)) %&gt;%\n  slice(1:5)%&gt;%\n  as_tibble()\n\nmainclassNumber\n\n# A tibble: 5 × 2\n  `USPTO Main Class ID`  Freq\n  &lt;fct&gt;                 &lt;int&gt;\n1 257                    7979\n2 455                    6191\n3 370                    5483\n4 348                    4113\n5 709                    4018"
  },
  {
    "objectID": "01_tidyverse.html",
    "href": "01_tidyverse.html",
    "title": "01 Intro to the tidyverse",
    "section": "",
    "text": "Data Science at TUHH ——————————————————\n\n\nIntro to Tidyverse Challenge —-\n\n# 1.0 Load libraries ----\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(lubridate)\nlibrary(writexl)\n\n# 2.0 Importing Files ----\n\nbikes_tbl &lt;- read_excel(\"C:/Users/arara/OneDrive/Belgeler/GitHub/ss24-bdsb-araratcetinkaya/01_tidyverse_files/ds_data/01_bike_sales/01_raw_data/bikes.xlsx\")\n\norderlines_tbl &lt;- read_excel(\"C:/Users/arara/OneDrive/Belgeler/GitHub/ss24-bdsb-araratcetinkaya/01_tidyverse_files/ds_data/01_bike_sales/01_raw_data/orderlines.xlsx\")\n\nNew names:\n• `` -&gt; `...1`\n\nbikeshops_tbl &lt;- read_excel(\"C:/Users/arara/OneDrive/Belgeler/GitHub/ss24-bdsb-araratcetinkaya/01_tidyverse_files/ds_data/01_bike_sales/01_raw_data/bikeshops.xlsx\")\n\n\n# 3.0 Examining Data ----\n\nglimpse(bikes_tbl)\n\nRows: 231\nColumns: 9\n$ bike.id        &lt;dbl&gt; 2875, 2873, 2874, 2876, 2877, 2225, 2091, 2086, 2088, 2…\n$ model          &lt;chr&gt; \"Aeroad CF SL Disc 8.0 Di2\", \"Aeroad CF SLX Disc 9.0 ET…\n$ model.year     &lt;dbl&gt; 2020, 2020, 2020, 2020, 2020, 2019, 2019, 2021, 2020, 2…\n$ frame.material &lt;chr&gt; \"carbon\", \"carbon\", \"carbon\", \"carbon\", \"carbon\", \"carb…\n$ weight         &lt;dbl&gt; 7.60, 7.27, 7.10, 7.73, 7.83, 6.80, 6.80, 7.60, 7.30, 7…\n$ price          &lt;dbl&gt; 4579, 6919, 6429, 5069, 3609, 6139, 5359, 2629, 3699, 3…\n$ category       &lt;chr&gt; \"Road - Race - Aeroad\", \"Road - Race - Aeroad\", \"Road -…\n$ gender         &lt;chr&gt; \"unisex\", \"unisex\", \"unisex\", \"unisex\", \"unisex\", \"unis…\n$ url            &lt;chr&gt; \"https://www.canyon.com/en-de/road-bikes/race-bikes/aer…\n\nglimpse(orderlines_tbl)\n\nRows: 15,644\nColumns: 7\n$ ...1        &lt;chr&gt; \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"…\n$ order.id    &lt;dbl&gt; 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7…\n$ order.line  &lt;dbl&gt; 1, 2, 1, 2, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2…\n$ order.date  &lt;dttm&gt; 2015-01-07, 2015-01-07, 2015-01-10, 2015-01-10, 2015-01-1…\n$ customer.id &lt;dbl&gt; 2, 2, 10, 10, 6, 6, 6, 6, 6, 22, 8, 8, 8, 8, 16, 16, 16, 1…\n$ product.id  &lt;dbl&gt; 2681, 2411, 2629, 2137, 2367, 1973, 2422, 2655, 2247, 2408…\n$ quantity    &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1…\n\nglimpse(bikeshops_tbl)\n\nRows: 30\nColumns: 5\n$ bikeshop.id &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,…\n$ name        &lt;chr&gt; \"Zum Goldenen Lenker\", \"AlexandeRad\", \"Fahrradladen 16\", \"…\n$ location    &lt;chr&gt; \"Berlin, Berlin\", \"Hamburg, Hamburg\", \"Munich, Bavaria\", \"…\n$ lat         &lt;dbl&gt; 52.51667, 53.57532, 48.15000, 50.93333, 50.11552, 48.78234…\n$ lng         &lt;dbl&gt; 13.400000, 10.015340, 11.583333, 6.950000, 8.684167, 9.180…\n\n# 4.0 Joining Data ----\n\nbike_orderlines_joined_tbl &lt;- orderlines_tbl %&gt;%\n  left_join(bikes_tbl, by = c(\"product.id\" = \"bike.id\")) %&gt;%\n  left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\n\n\n# 5.0 Wrangling Data ----\n\nbike_orderlines_wrangled_tbl &lt;- bike_orderlines_joined_tbl %&gt;%\n  \n  separate(col = location,\n           into = c(\"city\", \"state\"),\n           sep = \", \") %&gt;%\n  \n  mutate(total.price = price*quantity) %&gt;%\n  \n  select(-...1, -gender, -model, -category, -ends_with(\".id\"), -order.line, -lat, -lng,-url, \n         -frame.material, -model.year,-weight) %&gt;%\n  \n  bind_cols(bike_orderlines_joined_tbl %&gt;% select(order.id)) %&gt;% \n  \n  rename(bikeshop = name) %&gt;%\n  \n  select(order.id, price, quantity, total.price, city, state, bikeshop, everything()) %&gt;%\n  \n  set_names(names(.) %&gt;% str_replace_all(\"\\\\.\", \"_\"))\n\n\n# 6.0 Business Insights ----\n# 6.1 Sales by location ----\n\n# Step 1 - Manipulate\n\nsales_by_location_tbl &lt;- bike_orderlines_wrangled_tbl %&gt;%\n  \n  select(state, total_price) %&gt;%\n  \n  group_by(state) %&gt;% \n  \n  summarize(sales = sum(total_price)) %&gt;%\n  \n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\n\n\n\n# Step 2 - Visualize\n\nsales_by_location_tbl %&gt;%\n  \n  ggplot(aes(x = state, y = sales)) +\n  \n  geom_col(fill = \"purple\") + \n  geom_label(aes(label = sales_text)) + \n  \n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  \n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title    = \"Revenue by State\",\n    x = \"\", # Override defaults for x and y\n    y = \"Revenue\"\n  )\n\n\n\n\n\n\n\n# 6.2 Sales by location and year ----\n\n# Step 1 - Manipulate\n\nsales_by_location_year_tbl &lt;- bike_orderlines_wrangled_tbl %&gt;%\n  \n  select(state, total_price, order_date) %&gt;%\n  \n  mutate(year = year(order_date)) %&gt;%\n  \n  group_by(state, year) %&gt;% \n  \n  summarize(sales = sum(total_price)) %&gt;%\n  \n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\n`summarise()` has grouped output by 'state'. You can override using the\n`.groups` argument.\n\n# Step 2 - Visualize \n\nsales_by_location_year_tbl %&gt;%\n  \n  ggplot(aes(x = year, y = sales, fill = state)) +\n  \n  geom_col() + # Run up to here to get a stacked bar plot\n  \n  # Facet\n  facet_wrap(~ state) +\n  \n  # Formatting\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title = \"Revenue by year and state\",\n    subtitle = \"Some states have clearly higher sales\",\n    fill = \"States\" # Changes the legend name\n  )\n\n\n\n\n\n\n\n# 7.0 Writing Files ----\n\n# 7.1 Excel ----\n\nbike_orderlines_wrangled_tbl %&gt;%\n  write_xlsx(\"C:/Users/arara/OneDrive/Belgeler/GitHub/ss24-bdsb-araratcetinkaya/01_tidyverse_files/ds_data/01_bike_sales/02_wrangled_data/bike_orderlines_wrangled_tbl.xlsx\")\n\n# 7.2 CSV ----\nbike_orderlines_wrangled_tbl %&gt;% \n  write_csv(\"C:/Users/arara/OneDrive/Belgeler/GitHub/ss24-bdsb-araratcetinkaya/01_tidyverse_files/ds_data/01_bike_sales/02_wrangled_data/bike_orderlines_wrangled_tbl.csv\")\n\n# 7.3 RDS ----\nbike_orderlines_wrangled_tbl %&gt;% \n  write_rds(\"C:/Users/arara/OneDrive/Belgeler/GitHub/ss24-bdsb-araratcetinkaya/01_tidyverse_files/ds_data/01_bike_sales/02_wrangled_data/bike_orderlines_wrangled_tbl.rds\")"
  },
  {
    "objectID": "02_data_acquisition.html",
    "href": "02_data_acquisition.html",
    "title": "02 Data Acqusition",
    "section": "",
    "text": "###Challenge 1 —-\n\n# 1.0 Load libraries ----\n\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(tibble)\nlibrary(tidyverse)\nlibrary(keyring)\n\n# I get an error while building the website because this key\n#So, I am commenting it.\n\n# keyring::key_set(\"token\")\n# GET(alphavantage_api_url, query = list('function' = \"GLOBAL_QUOTE\",\n#                                        symbol     = ticker,\n#                                        apikey     = key_get(\"token\")))\n#     \n#     \n\n\n#API for last 24h prices of the Crypto Currencies in Binance.\nresp &lt;- GET(\"https://api2.binance.com/api/v3/ticker/24hr\")\n\n\ncriptoData_tbl &lt;- fromJSON(rawToChar(resp$content))\n\nnames(criptoData_tbl)\n\n [1] \"symbol\"             \"priceChange\"        \"priceChangePercent\"\n [4] \"weightedAvgPrice\"   \"prevClosePrice\"     \"lastPrice\"         \n [7] \"lastQty\"            \"bidPrice\"           \"bidQty\"            \n[10] \"askPrice\"           \"askQty\"             \"openPrice\"         \n[13] \"highPrice\"          \"lowPrice\"           \"volume\"            \n[16] \"quoteVolume\"        \"openTime\"           \"closeTime\"         \n[19] \"firstId\"            \"lastId\"             \"count\"             \n\ncriptoData_wrangled_tbl &lt;- criptoData_tbl %&gt;%\n  \n  select(symbol, lastPrice, contains(\"Change\"), prevClosePrice, openPrice, highPrice, lowPrice, volume) %&gt;%\n  \n  arrange(desc(priceChangePercent )) %&gt;%\n  \n  as_tibble()\n\ncriptoData_wrangled_10_tbl &lt;- slice_max(criptoData_wrangled_tbl,priceChangePercent,n= 10)\n\ncriptoData_wrangled_10_tbl\n\n# A tibble: 10 × 9\n   symbol   lastPrice   priceChange priceChangePercent prevClosePrice openPrice \n   &lt;chr&gt;    &lt;chr&gt;       &lt;chr&gt;       &lt;chr&gt;              &lt;chr&gt;          &lt;chr&gt;     \n 1 HOTUSDT  0.00237500  0.00021500  9.954              0.00216000     0.00216000\n 2 TIAUSDC  9.50000000  0.86000000  9.954              8.62000000     8.64000000\n 3 DOGEEUR  0.15282000  0.01382000  9.942              0.13890000     0.13900000\n 4 ACEBTC   0.00007300  0.00000660  9.940              0.00006640     0.00006640\n 5 GRTTRY   10.93600000 0.98800000  9.932              9.94800000     9.94800000\n 6 OCEANTRY 33.49400000 3.02300000  9.921              30.74700000    30.471000…\n 7 DFUSDT   0.04687000  0.00423000  9.920              0.04264000     0.04264000\n 8 ZENUSDT  9.01000000  0.81000000  9.878              8.20000000     8.20000000\n 9 HOOKUSDT 0.85770000  0.07710000  9.877              0.78140000     0.78060000\n10 UFTUSDT  0.47290000  0.04250000  9.875              0.43090000     0.43040000\n# ℹ 3 more variables: highPrice &lt;chr&gt;, lowPrice &lt;chr&gt;, volume &lt;chr&gt;\n\n# Visualization  ----\n\ncriptoData_wrangled_10_tbl %&gt;%\n  \n  ggplot(aes(x = symbol, y = priceChangePercent)) +\n  \n  geom_col(fill = \"#2DC6D6\") + # Use geom_col for a bar plot\n  \n  labs(\n    title    = \"Latest Crypto Changes\",\n    x = \"\", # Override defaults for x and y\n    y = \"Change Percantage\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n# 1.0 Libraries ----\n\nlibrary(tidyverse) # Main Package - Loads dplyr, purrr, etc.\nlibrary(rvest)     # HTML Hacking & Web Scraping\nlibrary(xopen)     # Quickly opening URLs\nlibrary(jsonlite)  # converts JSON files to R objects\nlibrary(glue)      # concatenate strings\nlibrary(stringi)   # character string/text processing\nlibrary(purrr)\n\n# 1.1 Collecting Product Data ----\n# MTB Style bikes and prices.\n\nurl_home          &lt;- \"https://www.rosebikes.com/bikes/mtb\"\n\nhtml_home         &lt;- read_html(url_home)\n\nbike_mtb_model_char &lt;- html_home %&gt;%\n  \n  html_nodes(css = \".large-4 .basic-headline__title\") %&gt;%\n  html_text2()\n\n\nbike_mtb_model_tbl &lt;- bike_mtb_model_char %&gt;% \n  as_tibble() %&gt;%\n  rename(\"BikeModel\" = \"value\")\n\nbike_mtb_model_tbl\n\n# A tibble: 8 × 1\n  BikeModel     \n  &lt;chr&gt;         \n1 PDQ           \n2 COUNT SOLO    \n3 THRILL HILL   \n4 GROUND CONTROL\n5 ROOT MILLER   \n6 BONERO        \n7 SCRUB         \n8 THE BRUCE     \n\nbike_mtb_price_char &lt;- html_home %&gt;%\n  \n  html_nodes(css = \".catalog-category-bikes__price-title\") %&gt;%\n  html_text2()\n\nbike_mtb_price_tbl &lt;- parse_number(bike_mtb_price_char) %&gt;% \n  as_tibble() %&gt;%\n  rename(\"BikePriceInEuros\" = \"value\")\n\nbike_mtb_price_tbl\n\n# A tibble: 8 × 1\n  BikePriceInEuros\n             &lt;dbl&gt;\n1             2699\n2              499\n3             2299\n4             1499\n5             1799\n6              999\n7             3299\n8              799\n\nbike_mtb_tbl &lt;- tibble(bike_mtb_model_tbl, bike_mtb_price_tbl) %&gt;%\n  arrange(BikePriceInEuros)\n\nmeanPrice &lt;- mean(bike_mtb_price_tbl$BikePriceInEuros)\n\nmeanPrice\n\n[1] 1736.5\n\nbike_mtb_tbl\n\n# A tibble: 8 × 2\n  BikeModel      BikePriceInEuros\n  &lt;chr&gt;                     &lt;dbl&gt;\n1 COUNT SOLO                  499\n2 THE BRUCE                   799\n3 BONERO                      999\n4 GROUND CONTROL             1499\n5 ROOT MILLER                1799\n6 THRILL HILL                2299\n7 PDQ                        2699\n8 SCRUB                      3299\n\nbike_mtb_tbl %&gt;%\n  ggplot(aes(x = BikeModel, y = BikePriceInEuros)) +\n  geom_col(fill = \"slateblue4\")+\n  geom_label(aes(label = BikePriceInEuros))"
  },
  {
    "objectID": "02_data_acquisition.html#data-acquisition-challenge--",
    "href": "02_data_acquisition.html#data-acquisition-challenge--",
    "title": "02 Data Acqusition",
    "section": "",
    "text": "###Challenge 1 —-\n\n# 1.0 Load libraries ----\n\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(tibble)\nlibrary(tidyverse)\nlibrary(keyring)\n\n# I get an error while building the website because this key\n#So, I am commenting it.\n\n# keyring::key_set(\"token\")\n# GET(alphavantage_api_url, query = list('function' = \"GLOBAL_QUOTE\",\n#                                        symbol     = ticker,\n#                                        apikey     = key_get(\"token\")))\n#     \n#     \n\n\n#API for last 24h prices of the Crypto Currencies in Binance.\nresp &lt;- GET(\"https://api2.binance.com/api/v3/ticker/24hr\")\n\n\ncriptoData_tbl &lt;- fromJSON(rawToChar(resp$content))\n\nnames(criptoData_tbl)\n\n [1] \"symbol\"             \"priceChange\"        \"priceChangePercent\"\n [4] \"weightedAvgPrice\"   \"prevClosePrice\"     \"lastPrice\"         \n [7] \"lastQty\"            \"bidPrice\"           \"bidQty\"            \n[10] \"askPrice\"           \"askQty\"             \"openPrice\"         \n[13] \"highPrice\"          \"lowPrice\"           \"volume\"            \n[16] \"quoteVolume\"        \"openTime\"           \"closeTime\"         \n[19] \"firstId\"            \"lastId\"             \"count\"             \n\ncriptoData_wrangled_tbl &lt;- criptoData_tbl %&gt;%\n  \n  select(symbol, lastPrice, contains(\"Change\"), prevClosePrice, openPrice, highPrice, lowPrice, volume) %&gt;%\n  \n  arrange(desc(priceChangePercent )) %&gt;%\n  \n  as_tibble()\n\ncriptoData_wrangled_10_tbl &lt;- slice_max(criptoData_wrangled_tbl,priceChangePercent,n= 10)\n\ncriptoData_wrangled_10_tbl\n\n# A tibble: 10 × 9\n   symbol   lastPrice   priceChange priceChangePercent prevClosePrice openPrice \n   &lt;chr&gt;    &lt;chr&gt;       &lt;chr&gt;       &lt;chr&gt;              &lt;chr&gt;          &lt;chr&gt;     \n 1 HOTUSDT  0.00237500  0.00021500  9.954              0.00216000     0.00216000\n 2 TIAUSDC  9.50000000  0.86000000  9.954              8.62000000     8.64000000\n 3 DOGEEUR  0.15282000  0.01382000  9.942              0.13890000     0.13900000\n 4 ACEBTC   0.00007300  0.00000660  9.940              0.00006640     0.00006640\n 5 GRTTRY   10.93600000 0.98800000  9.932              9.94800000     9.94800000\n 6 OCEANTRY 33.49400000 3.02300000  9.921              30.74700000    30.471000…\n 7 DFUSDT   0.04687000  0.00423000  9.920              0.04264000     0.04264000\n 8 ZENUSDT  9.01000000  0.81000000  9.878              8.20000000     8.20000000\n 9 HOOKUSDT 0.85770000  0.07710000  9.877              0.78140000     0.78060000\n10 UFTUSDT  0.47290000  0.04250000  9.875              0.43090000     0.43040000\n# ℹ 3 more variables: highPrice &lt;chr&gt;, lowPrice &lt;chr&gt;, volume &lt;chr&gt;\n\n# Visualization  ----\n\ncriptoData_wrangled_10_tbl %&gt;%\n  \n  ggplot(aes(x = symbol, y = priceChangePercent)) +\n  \n  geom_col(fill = \"#2DC6D6\") + # Use geom_col for a bar plot\n  \n  labs(\n    title    = \"Latest Crypto Changes\",\n    x = \"\", # Override defaults for x and y\n    y = \"Change Percantage\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n# 1.0 Libraries ----\n\nlibrary(tidyverse) # Main Package - Loads dplyr, purrr, etc.\nlibrary(rvest)     # HTML Hacking & Web Scraping\nlibrary(xopen)     # Quickly opening URLs\nlibrary(jsonlite)  # converts JSON files to R objects\nlibrary(glue)      # concatenate strings\nlibrary(stringi)   # character string/text processing\nlibrary(purrr)\n\n# 1.1 Collecting Product Data ----\n# MTB Style bikes and prices.\n\nurl_home          &lt;- \"https://www.rosebikes.com/bikes/mtb\"\n\nhtml_home         &lt;- read_html(url_home)\n\nbike_mtb_model_char &lt;- html_home %&gt;%\n  \n  html_nodes(css = \".large-4 .basic-headline__title\") %&gt;%\n  html_text2()\n\n\nbike_mtb_model_tbl &lt;- bike_mtb_model_char %&gt;% \n  as_tibble() %&gt;%\n  rename(\"BikeModel\" = \"value\")\n\nbike_mtb_model_tbl\n\n# A tibble: 8 × 1\n  BikeModel     \n  &lt;chr&gt;         \n1 PDQ           \n2 COUNT SOLO    \n3 THRILL HILL   \n4 GROUND CONTROL\n5 ROOT MILLER   \n6 BONERO        \n7 SCRUB         \n8 THE BRUCE     \n\nbike_mtb_price_char &lt;- html_home %&gt;%\n  \n  html_nodes(css = \".catalog-category-bikes__price-title\") %&gt;%\n  html_text2()\n\nbike_mtb_price_tbl &lt;- parse_number(bike_mtb_price_char) %&gt;% \n  as_tibble() %&gt;%\n  rename(\"BikePriceInEuros\" = \"value\")\n\nbike_mtb_price_tbl\n\n# A tibble: 8 × 1\n  BikePriceInEuros\n             &lt;dbl&gt;\n1             2699\n2              499\n3             2299\n4             1499\n5             1799\n6              999\n7             3299\n8              799\n\nbike_mtb_tbl &lt;- tibble(bike_mtb_model_tbl, bike_mtb_price_tbl) %&gt;%\n  arrange(BikePriceInEuros)\n\nmeanPrice &lt;- mean(bike_mtb_price_tbl$BikePriceInEuros)\n\nmeanPrice\n\n[1] 1736.5\n\nbike_mtb_tbl\n\n# A tibble: 8 × 2\n  BikeModel      BikePriceInEuros\n  &lt;chr&gt;                     &lt;dbl&gt;\n1 COUNT SOLO                  499\n2 THE BRUCE                   799\n3 BONERO                      999\n4 GROUND CONTROL             1499\n5 ROOT MILLER                1799\n6 THRILL HILL                2299\n7 PDQ                        2699\n8 SCRUB                      3299\n\nbike_mtb_tbl %&gt;%\n  ggplot(aes(x = BikeModel, y = BikePriceInEuros)) +\n  geom_col(fill = \"slateblue4\")+\n  geom_label(aes(label = BikePriceInEuros))"
  },
  {
    "objectID": "04_data_visualization.html",
    "href": "04_data_visualization.html",
    "title": "04 Data Visualization",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nlibrary(ggplot2)\n##Data Acquisition ----\n\ncovid_data_tbl &lt;- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n\nRows: 399319 Columns: 67\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): iso_code, continent, location, tests_units\ndbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\ndate  (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n##Data Wrangling ----\n\n#First I would like to select all the necessary data on one single table to reduce the total data\n\ncovid_data_general &lt;- covid_data_tbl %&gt;% \n  \n  mutate(location = case_when(\n    \n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n    \n  )) %&gt;%\n  distinct() %&gt;% \n  select(continent, location, date, total_cases) \n\ncovid_country &lt;- covid_data_general %&gt;% \n  \n  filter(location == c(\"Germany\" , \"UK\", \"France\" , \"Spain\", \"USA\", \"Turkey\") ) %&gt;% \n  select(location, date, total_cases) \n\nWarning: There was 1 warning in `filter()`.\nℹ In argument: `location == c(\"Germany\", \"UK\", \"France\", \"Spain\", \"USA\",\n  \"Turkey\")`.\nCaused by warning in `location == c(\"Germany\", \"UK\", \"France\", \"Spain\", \"USA\", \"Turkey\")`:\n! uzun olan nesne uzunluğu kısa olan nesne uzunluğunun bir katı değil\n\ncovid_country %&gt;%\n  \n  ggplot(aes(x = date, y= total_cases, fill = location, color = location)) +\n  \n  geom_line(size = 1, linetype = 1) +\n  \n  theme_minimal() +\n  \n  theme(\n    axis.text.x = element_text(\n      angle = 60,\n      hjust = 1 \n    ),\n    panel.background = element_rect(fill = \"transparent\"), \n    plot.background = element_rect(fill = \"transparent\", color = NA), \n    legend.background = element_rect(fill = \"transparent\"), \n    legend.box.background = element_rect(fill = \"transparent\"), \n    legend.key = element_rect(fill = \"transparent\", colour = NA), \n    axis.line = element_line(colour = \"black\")\n  ) +\n  \n   geom_label(aes(x =date, y = total_cases, label=total_cases),\n             fill  = \"blue\",\n             color = \"white\",\n             fontface = \"italic\",\n             vjust = 0,\n             hjust = 0.6,\n             size  = 2.5,\n             data = covid_country %&gt;%\n               filter(location %in% c(\"USA\")) %&gt;% \n               filter(total_cases == max(total_cases))\n            )+\n  \n  scale_x_date(labels = date_format(\"%B/%y\"),breaks = date_breaks(\"months\"))+\n  scale_y_continuous(breaks = seq(0, 9e+07, by = 20000000), \n                     labels = scales::label_number(scale_cut = scales::cut_short_scale())) +\n  \n  \n  labs(\n    title = \"COVID-19 Confirmed Cases Worldwide\",\n    subtitle = \"Cases for Selected Countries\",\n    y = \"Cumulative Cases\",\n    x= \"Between 2020-2022\",\n    color = \"Countries\",\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: Removed 25 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n## Challenge 2 ----\n\nworld &lt;- map_data(\"world\")\n\n\ncovid_death_data &lt;- covid_data_tbl %&gt;% \n  \n  mutate(location = case_when(\n    \n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n    \n  )) %&gt;%\n  \n  select(location, date, total_deaths,population) %&gt;%\n  filter(date == \"2022-04-26\") %&gt;% \n  select(-date)\n\n\ncovid_death_data &lt;- covid_death_data %&gt;% \n  \n  \n  left_join(y=world, by = c(\"location\" = \"region\")) %&gt;% \n  mutate(mortality_rate = total_deaths*100/population) %&gt;% \n  select(-total_deaths,-population) \n\n\n##Data Visualization\n\ncovid_death_data %&gt;% ggplot(aes(long, lat)) +\n  \n  \n  geom_map(aes(map_id = location, fill = `mortality_rate`),  map=world, color = \"black\") +\n  \n  \n  scale_fill_gradient(\n    low = \"yellowgreen\",\n    high = \"red\",\n    labels = scales::percent,\n    na.value = \"grey\"\n  )+\n  \n  \n  labs(\n    title = \"Confirmed COVID-19 deaths relative to the size of the population\",\n    subtitle = \"Around 6.2 million Confirmed COVID-19 deaths worldwide\",\n    caption = str_glue(\"Date: 26/04/2022\"),\n    color = \"mortality_rate\"\n  )+\n  \n  \n  theme(\n    panel.background = element_rect(fill = \"transparent\"),\n    plot.background = element_rect(fill = \"transparent\", color = NA), \n    legend.background = element_rect(fill = \"transparent\"), \n    legend.box.background = element_rect(fill = \"transparent\"), \n    legend.key = element_rect(fill = \"transparent\", colour = NA), # get rid of key legend fill, and of the surrounding\n  )"
  },
  {
    "objectID": "content/01_journal/02_data_acquisition.html",
    "href": "content/01_journal/02_data_acquisition.html",
    "title": "Data Acquisition",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/04_data_visualization.html",
    "href": "content/01_journal/04_data_visualization.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/03_other/06_links.html",
    "href": "content/03_other/06_links.html",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual .\n\n\n\n\nGoogle is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  },
  {
    "objectID": "content/03_other/06_links.html#r-and-r-studio",
    "href": "content/03_other/06_links.html#r-and-r-studio",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual ."
  },
  {
    "objectID": "content/03_other/06_links.html#additional-r-resources",
    "href": "content/03_other/06_links.html#additional-r-resources",
    "title": "Links",
    "section": "",
    "text": "Google is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  }
]